{"remainingRequest":"/Users/palinee/Desktop/lottery2/lottery/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/palinee/Desktop/lottery2/lottery/vue/node_modules/@tendermint/vue/src/components/SpBankBalanceNav.vue?vue&type=style&index=0&id=044bb696&scoped=true&lang=css&","dependencies":[{"path":"/Users/palinee/Desktop/lottery2/lottery/vue/node_modules/@tendermint/vue/src/components/SpBankBalanceNav.vue","mtime":1606580686506},{"path":"/Users/palinee/Desktop/lottery2/lottery/vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/palinee/Desktop/lottery2/lottery/vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/palinee/Desktop/lottery2/lottery/vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/palinee/Desktop/lottery2/lottery/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/palinee/Desktop/lottery2/lottery/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0IHVybCgiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1JbnRlcjp3Z2h0QDEwMDsyMDA7MzAwOzQwMDs1MDA7NTMxOzYwMDs3MDA7ODAwJmRpc3BsYXk9c3dhcCIpOwoKLmNvbnRhaW5lciB7CiAgZm9udC1mYW1pbHk6ICJJbnRlciIsICJIZWx2ZXRpY2EiLCBzYW5zLXNlcmlmOwp9Ci5saXN0IHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKfQoubGlzdF9faXRlbSB7CiAgYmFja2dyb3VuZDogcmdiKDI0NywgMjQ3LCAyNDcpOwogIHBhZGRpbmc6IDFyZW07CiAgYm9yZGVyLXJhZGl1czogMC41cmVtOwogIHdpZHRoOiAxMDAlOwogIG1heC13aWR0aDogMjI1cHg7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKfQoubGlzdF9faXRlbV9faDMgewogIGZvbnQtc2l6ZTogMC44NzVyZW07CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKICBsZXR0ZXItc3BhY2luZzogMC4wNWVtOwogIGZvbnQtd2VpZ2h0OiA3MDA7CiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTsKfQoubGlzdF9faXRlbV9faDIgewogIGZvbnQtc2l6ZTogMS43NXJlbTsKfQouaDNfX2ljb24gewogIHdpZHRoOiAxZW07CiAgaGVpZ2h0OiAxZW07CiAgcGFkZGluZzogMCAwLjI1ZW07CiAgZmlsbDogcmdiYSgwLCAwLCAwLCAwLjI1KTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["SpBankBalanceNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SpBankBalanceNav.vue","sourceRoot":"node_modules/@tendermint/vue/src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n    \n      <sp-h6 style=\"color: #FFFFFF;\">\n      <!-- <div v-if=\"balances.length < 1\" style=\"color: #FFFFFF;\"> 0 Token</div> -->\n      \n      <div class=\"list\">\n        <div v-for=\"b in balances\" :key=\"b.denom\">\n          <div style=\"color: #FFFFFF;\">\n            {{ numberFormat(b.amount) }} {{ b.denom }}\n          </div>\n        </div>\n      </div>\n      </sp-h6>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;531;600;700;800&display=swap\");\n\n.container {\n  font-family: \"Inter\", \"Helvetica\", sans-serif;\n}\n.list {\n  display: flex;\n  flex-wrap: wrap;\n}\n.list__item {\n  background: rgb(247, 247, 247);\n  padding: 1rem;\n  border-radius: 0.5rem;\n  width: 100%;\n  max-width: 225px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  box-sizing: border-box;\n}\n.list__item__h3 {\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  font-weight: 700;\n  margin-bottom: 0.25rem;\n}\n.list__item__h2 {\n  font-size: 1.75rem;\n}\n.h3__icon {\n  width: 1em;\n  height: 1em;\n  padding: 0 0.25em;\n  fill: rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n}\n</style>\n\n<script>\nimport SpH3 from \"./SpH3\";\nimport IconSynchronization1 from \"./IconSynchronization1\";\n\nexport default {\n    name: 'SpBankBalanceNav',\n  components: {\n    SpH3,\n    IconSynchronization1,\n  },\n  category: \"wallet\",\n  computed: {\n    balances() {\n      return this.$store.state.cosmos.bankBalances;\n    },\n  },\n  methods: {\n    numberFormat(number) {\n      return Intl.NumberFormat().format(number);\n    },\n    async balancesUpdate() {\n      await this.$store.dispatch(\"cosmos/accountSignInTry\");\n      await this.$store.dispatch(\"cosmos/bankBalancesGet\");\n    },\n  },\n};\n</script>\n"]}]}